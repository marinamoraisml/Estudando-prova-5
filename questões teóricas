AVL-01) Explique o que e uma arvore AVL e qual e a sua principal vantagem em relacao a arvore
binaria de busca (BST) tradicional.
  Uma AVL √© uma √°rvore bin√°ria de busca, por√©m tem o fator balanceamento que a torna sempre uma √°rvore balanceada ap√≥s opera√ß√µes. A principal vantagem dela decorre do balanceamento pois faz com que a altura seja sempre O(log n) mantendo as opera√ß√µes eficientes.
AVL-02) Defina o conceito de 'balance' em uma arvore AVL. O que representa o valor balance = -1,
0 ou 1 para um no?
  Balance √© a diferen√ßa entre a altura da sub√°rvore √† esquerda e a altura da sub√°rvore a direita. O valor -1 representa que o n√≥ est√° balanceado por√©m pendendo para a direita, o 1 significa que ta pendendo para a esquerda e o 0 est√° perfeitamente balanceado.
AVL-03) Uma sequencia de insercoes ordenadas em uma arvore binaria de busca pode levar a um
desbalanceamento. Como a arvore AVL evita esse comportamento?
  Atrav√©s das rota√ß√µes. Essas rota√ß√µes s√£o feitas ap√≥s alguma opera√ß√£o desbalancear a √°rvore, fazendo com que o balance sempre esteja entre 1 e -1.
AVL-04) Explique o que sao as rotacoes simples e duplas nas arvores AVL. De exemplo dos 4
casos: LL, LR, RR, RL.
  LL : o n√≥ foi inserido na esquerda do filho esquerdo ent√£o precisa de uma rota√ß√£o simples para a direita, LR: o novo n√≥ foi inserido a direita do do filho esquerdo ent√£o precisa de uma rota√ß√£o dupla, primeiro para esquerda e depois para a direita; RR: o novo n√≥ foi inserido √† direita de um n√≥ que √© filho direito ent√£o √© feito uma rota√ß√£o simples para esquerda; RL: o novo n√≥ foi inserido √° esquerda de um filho direito, ent√£o √© preciso fazer uma rota√ß√£o dupla primeiro para direita e depois para esquerda
AVL-05) Considere um no com subarvore a esquerda de altura 3 e subarvore a direita de altura 1.
Essa arvore esta balanceada segundo os criterios da AVL? Justifique.
  N√£o pois o balance √© 2

Arvore B
B-01) Defina uma arvore B de ordem m. Quais sao as principais restricoes impostas aos nos
internos dessa arvore?
  Os n√≥s tem um n√∫mero m√°ximo de filhos igual a m, um n√∫mero m√≠nimo de filho igual m/2, exceto a raiz, um n√∫mero m√°ximo de chaves em um n√≥ igual a k = m-1 e um n√∫mero m√≠nimo igual m/2 -1.
B-02) Compare as arvores B com as arvores binarias de busca em termos de profundidade e
numero de acessos ao disco. Por que a arvore B e preferida em sistemas de banco de dados?
  As √°rvores B v√£o ter menor profundidade, o que vai reduzir o n√∫mero de acesso ao disco, s√£o preferidas pois precisam acessar menos o disco e acesso ao disco √© caro
B-03) O que acontece quando ocorre overflow em um no da arvore B? Explique o processo de split
e como ele afeta a estrutura da arvore.
  Quando acontece o overflow ou seja o n√∫mero m√°ximo de chaves de um n√≥ excede o limite m-1 acontece o split, que faz com que a chave do meio (mediana) sobe para o pai, e as demais formam dois novos n√≥ um a esquerda e outro a direita, para garantir que tenha espa√ßo para novas chaves.
B-04) Considere uma arvore B de ordem 5. Qual o numero minimo e maximo de chaves que um no
interno pode conter?
  m = 5
  min = (m/2) -1 = 2
  max = k = m -1 = 4
B-05) Quais sao as principais diferencas entre arvore B e arvore B+? Em que contexto o uso da B+
e preferido?
  Na √°rvore B+, todos os dados est√£o armazenados apenas nas folhas e estas s√£o encadeadas entre si. Isso facilita buscas sequenciais e torna a √°rvore mais eficiente em consultas em intervalos.

Arvore Vermelho-Preto (PV)
PV-01) Defina o que e uma arvore vermelho-preto. Quais sao as cinco propriedades fundamentais
que ela deve satisfazer?
  Cada n√≥ √© preto ou vermelho, a raiz √© preta, n√≥ vermelho n√£o pode ter filho vermelho, todas as folhas(nil) s√£o pretas, todo caminho da raiz at√© uma folha cont√©m o mesmo n√∫mero de n√≥s pretos
PV-02) Qual o papel das cores nos nos de uma arvore PV? Como elas influenciam no
balanceamento?
  As cores imp√µem regras que v√£o limitar o desbalanceamento. As regras garantem que caminhos mais longos n√£o sejam mais que o dobro dos mais curtos, mantendo a altura em logn e evitando longos ramos de um lado.
PV-03) Explique por que uma arvore vermelho-preto garante altura logaritmica, mesmo nao sendo
perfeitamente balanceada como a AVL.
  Mesmo n√£o sendo perfeitamente balanceada como a AVL a pv garanate a altura log pois as regras das corem controlam o desbalanceamento excessivos
PV-04) Descreva os casos de rotacao necessarios apos a insercao de um no vermelho que viole as
propriedades da arvore PV.
  Rota√ß√£o vai ser necess√°ria quando um novo n√≥ vermelho √© inserido como filho de um n√≥ vermelho
PV-05) A arvore PV permite dois nos vermelhos consecutivos? Justifique com base nas
propriedades da estrutura.

Caso 1 ‚Äì Tio √© vermelho (recolora√ß√£o)
Pai e Tio de z s√£o vermelhos

Av√¥ √© preto

üìå Solu√ß√£o:

Recolore: pai e tio viram pretos, av√¥ vira vermelho

Pode causar problema para cima ‚Üí aplica corre√ß√£o recursiva no av√¥]
Resultado: y e tio ficam pretos, x vira vermelho
